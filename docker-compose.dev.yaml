services:
  # name the service
  crm-back-orchestrator:
    build: 
      context: .
      dockerfile: ${DOCKERFILE}
    image: ${IMAGE_NAME}
    container_name: ${IMAGE_NAME}
    ports:
      - "${PORT}:${PORT}"
    
    volumes:
      - ${VOLUME_LOCAL}:${VOLUME_INTERNAL}
      - ${VOLUME_NODE_MODULES_LOCAL}:${VOLUME_NODE_MODULES_INTERNAL}
    command: >
      sh -c "nodemon --watch package.json --watch yarn.lock --watch node_modules --exec 'yarn install && nest start --watch'"
    networks:
      - app-net
  redis_crm_back_orchestrator:
    image: ${REDIS_IMAGE}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${REDIS_DATA_DIR}:${REDIS_DATA_DIR_INTERNAL}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-net
    container_name: ${REDIS_CONTAINER_NAME}

networks:
  app-net:
    name: ${APP_NETWORK}
    external: true